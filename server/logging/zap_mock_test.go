// Code generated by MockGen. DO NOT EDIT.
// Source: go.uber.org/zap/zapcore (interfaces: ObjectMarshaler)

// Package logging is a generated GoMock package.
package logging

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	zapcore "go.uber.org/zap/zapcore"
)

// MockObjectMarshaler is a mock of ObjectMarshaler interface.
type MockObjectMarshaler struct {
	ctrl     *gomock.Controller
	recorder *MockObjectMarshalerMockRecorder
}

// MockObjectMarshalerMockRecorder is the mock recorder for MockObjectMarshaler.
type MockObjectMarshalerMockRecorder struct {
	mock *MockObjectMarshaler
}

// NewMockObjectMarshaler creates a new mock instance.
func NewMockObjectMarshaler(ctrl *gomock.Controller) *MockObjectMarshaler {
	mock := &MockObjectMarshaler{ctrl: ctrl}
	mock.recorder = &MockObjectMarshalerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockObjectMarshaler) EXPECT() *MockObjectMarshalerMockRecorder {
	return m.recorder
}

// MarshalLogObject mocks base method.
func (m *MockObjectMarshaler) MarshalLogObject(arg0 zapcore.ObjectEncoder) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MarshalLogObject", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// MarshalLogObject indicates an expected call of MarshalLogObject.
func (mr *MockObjectMarshalerMockRecorder) MarshalLogObject(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MarshalLogObject", reflect.TypeOf((*MockObjectMarshaler)(nil).MarshalLogObject), arg0)
}
